{"ast":null,"code":"var _jsxFileName = \"/Users/andylau/Desktop/react-useEffect/src/components/MyComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet myTimer;\n\nfunction MyComponent() {\n  _s();\n\n  const [timerIsActive, setTimerIsActive] = useState(false);\n  const [counter, setCounter] = useEffect(0);\n  useEffect(() => {\n    if (!timerIsActive) {\n      setTimerIsActive(true);\n      myTimer = setTimeout(() => {\n        setTimerIsActive(false);\n        console.log(\"Counting\");\n      }, 3000);\n    }\n  }, [timerIsActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MyComponent, \"8D37mEDWAAQPbP7BfZM7zcScMz8=\");\n\n_c = MyComponent;\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["/Users/andylau/Desktop/react-useEffect/src/components/MyComponent.js"],"names":["React","useState","useEffect","myTimer","MyComponent","timerIsActive","setTimerIsActive","counter","setCounter","setTimeout","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AACA,IAAIC,OAAJ;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,SAAS,CAAC,CAAD,CAAvC;AACAA,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,aAAL,EAAoB;AAClBC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAH,MAAAA,OAAO,GAAGM,UAAU,CAAC,MAAM;AACzBH,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,OAHmB,EAGjB,IAHiB,CAApB;AAID;AACF,GARQ,EAQN,CAACN,aAAD,CARM,CAAT;AASA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAbQD,W;;KAAAA,W;AAeT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nlet myTimer;\nfunction MyComponent() {\n  const [timerIsActive, setTimerIsActive] = useState(false);\n  const [counter, setCounter] = useEffect(0);\n  useEffect(() => {\n    if (!timerIsActive) {\n      setTimerIsActive(true);\n      myTimer = setTimeout(() => {\n        setTimerIsActive(false);\n        console.log(\"Counting\");\n      }, 3000);\n    }\n  }, [timerIsActive]);\n  return <div></div>;\n}\n\nexport default MyComponent;\n"]},"metadata":{},"sourceType":"module"}